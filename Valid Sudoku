class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
       
       bool used[10];
       int i,j,t,r;

       for(i=0;i<9;i++){                   
            fill(used,used+10,false);            // 判断每行是否正确
            for(j=0;j<9;j++){
                if(board[i][j]=='.') continue;
                if(used[board[i][j]-'0']==true) return false;
                used[board[i][j]-'0']=true;
            }
            fill(used,used+10,false);           // 判断每列是否正确
            for(j=0;j<9;j++){
                if(board[j][i]=='.') continue;
                if(used[board[j][i]-'0']==true) return false;
                used[board[j][i]-'0']=true;
            }
       }
       for(t=0;t<3;t++){                        //判断每个格子是否正确
            for(r=0;r<3;r++){
                fill(used,used+10,false);
                for(i=3*t;i<3*t+3;i++){
                    for(j=3*r;j<3*r+3;j++){
                        if(board[i][j]=='.') continue;
                        if(used[board[i][j]-'0']==true) return false;
                        used[board[i][j]-'0']=true;
                    }
                }
            }
        
       }
       return true;
        
    }
};
