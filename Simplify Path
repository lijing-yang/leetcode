use stack
..  表示上一级路径 出栈
.   表示当前路径 pass
其他 表示实际路径 入栈

class Solution {
public:
    string simplifyPath(string path) {
        int n=path.size();
        int i,start=0;
        string temp,result="";
        stack<string> st;
        
        for(i=0;i<n;i++){
            if(path[i]=='/'){
                if(start == i){
                    start++;
                    continue;
                }
                else{
                    temp = path.substr(start,i-start);
                    start = i+1;
                    if(temp == ".."){
                        if(!st.empty())
                            st.pop();
                    }
                    else if(temp != "."){
                        st.push(temp);
                    }
                    
                }
            }
            
        }
        if(path[n-1]!='/'){
            temp = path.substr(start,n-start);
            if(temp == ".."){
                if(!st.empty())
                st.pop();
            }
            else if(temp != "."){
                st.push(temp);
            }
        }
        
        while(!st.empty()){
            result = '/' + st.top() + result;
            st.pop();
        }
        
        return result == "" ? "/" : result;
        
        
    }
};
