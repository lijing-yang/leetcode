class Solution {
public:
    string getPermutation(int n, int k) {
        int i,temp;
        char nu[10]={'0','1','2','3','4','5','6','7','8','9'};
        vector<char> num;
        vector<char> result;
        for(i=1;i<=n;i++){
            num.push_back(nu[i]);
        }
        for(i=1;i<n;i++){
            if(k==0) break;
            temp=k/fun(n-i);
            k=k%fun(n-i);
            if(k==0)
                {result.push_back(num[temp-1]);num.erase(num.begin()+temp-1);}
            else
                {result.push_back(num[temp]);num.erase(num.begin()+temp);}
        }
        while(num.begin()!=num.end()){
            result.push_back(num[num.size()-1]);
            num.erase(num.begin()+num.size()-1);

        }
        
        string res(result.begin(),result.end());
        
        
        return res;
        
    }

    int fun(int t){
        if(t==1) return 1;
        else
            return fun(t-1)*t;

    }
    
};
